{"version":3,"sources":["Registration.js","Signup.js","Login.js","CategoryCard.js","Categories.js","Navbar.js","Question.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","className","href","to","id","for","type","placeholder","value","Signup","handleLogin","useState","username","setUsername","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","agreed","setAgreed","history","useHistory","onChange","e","target","onClick","console","log","fetch","method","headers","body","JSON","stringify","password_confirmation","then","r","json","catch","err","data","errors","alert","push","disabled","Login","user","setUser","error","CategoryCard","specificCategory","handleCatAndDiff","listOfCategories","Categories","map","Navbar","Question","category","difficulty","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","answersArray","setAnswersArray","answersState","setAnswersState","finalFourAnswerArray","setFinalFourAnswerArray","correctArrayState","setCorrectArrayState","answerIndex","setAnswerIndex","questionsArray","setQuestionsArray","attempt","setAttempt","highScore","setHighScore","averageScore","setAverageScore","personalHighScore","setPersonalHighScore","personalAverage","setPersonalAverage","newLeaderEntryPost","setNewLeaderEntryPost","newLeaderEntryPatch","setNewLeaderEntryPatch","allLeaderEntries","setAllLeaderEntries","resultsArray","setResultsArray","allData","setAllData","next","newAnswerIndex","decodeHtml","html","txt","document","createElement","innerHTML","handleAverage","allAttempts","highest","total","personalBest","personalTotal","count","i","length","response","ok","leaderData","filtered","filter","leaderEntry","high_score","cumulative_score","user_id","oldCombinedScore","updatedEntry","handleCombinedScore","average","useEffect","api","results","onlyQuestions","obj","question","onlyAnswers","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","correctArray","answersObj","hello","fourAnswerArray","key","j","Math","floor","random","temp","ansArrFunc","highscory","personalHighScory","averageScory","personalAveragy","scory","undefined","yourWrongAnswer","indexOf","answer","class","sort","a","b","reverse","entry","slice","style","height","answerOption","filteredArray","correctAns","handleAnswerOptionClick","App","setCategory","setDifficulty","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Route","getElementById"],"mappings":"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","file":"static/js/main.fa6d9335.chunk.js","sourcesContent":["import React from \"react\";\nimport './Auth.css';\nimport {Link} from \"react-router-dom\"\n\n\n\n\nfunction Registration() {\n\n\treturn (\n  <div className=\"registration\">\n  <nav className=\"main-nav\">\n\t\t<br></br>\n\n\t\t{/* <div id=\"sign-up-thing\"> */}\n\t\t{/* <Link className=\"signin\" href=\"#0\" to=\"/Login\">Sign in</Link> */}\n\n\t\t<div className=\"welcome\">Welcome to TriviApp! Sign up to See How You Stack up Against Your Peers!</div>\n\t\t{/* <Link className=\"signup\" href=\"#0\" to=\"/Signup\">Sign up</Link> */}\n\t\t{/* </div> */}\n\n\n\t\t<br></br>\n\t\t{/* <div className=\"test\"> Test Your Knowledge on a Variety of Topics and See How You Stack up Against Your Peers! </div> */}\n\n<div className=\"yo\">\n\t<ul className=\"youall\">\n<div className=\"hi\">\n\n\t\t<li><Link className=\"signin\" href=\"#0\" to=\"/Login\">Sign in</Link></li>\n\t\t<li><Link className=\"signup\" href=\"#0\" to=\"/Signup\">Sign up</Link></li>\n\t\t</div>\n\n\t</ul>\n\t</div>\n\n\n</nav>\n\n<div className=\"user-modal\">\n\t\t<div className=\"user-modal-container\">\n\t\t\t<ul className=\"switcher\">\n      <li><a href=\"#0\">Sign in</a></li>\n\t\t\t\t<li><a href=\"#0\">New account</a></li>\n\t\t\t</ul>\n\n\n\t\t\t<div id=\"reset-password\">\n\t\t\t\t<p className=\"form-message\">Lost your password? Please enter your email address.<br></br> You will receive a link to create a new password.</p>\n\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<label className=\"image-replace email\" for=\"reset-email\">E-mail</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"reset-email\" type=\"email\" placeholder=\"E-mail\"/>\n\t\t\t\t\t\t<span className=\"error-message\">An account with this email does not exist!</span>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<input className=\"full-width has-padding\" type=\"submit\" value=\"Reset password\"/>\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\n\t\t\t\t<p className=\"form-bottom-message\"><a href=\"#0\">Back to log-in</a></p>\n\t\t\t</div>\n\t\t\t<a href=\"#0\" className=\"close-form\">Close</a>\n\t\t</div>\n\t</div>\n  </div>\n\n  );\n}\n\nexport default Registration;\n\n\n{/* <form action=\"#\" method=\"post\">\n  <h2>Sign Up</h2>\n\t\t<p>\n\t\t\t<label for=\"Email\" className=\"floatLabel\">Email</label>\n\t\t\t<input id=\"Email\" name=\"Email\" type=\"text\"/>\n\t\t</p>\n\t\t<p>\n\t\t\t<label for=\"password\" class=\"floatLabel\">Password</label>\n\t\t\t<input id=\"password\" name=\"password\" type=\"password\"/>\n\t\t\t<span>Enter a password longer than 8 characters</span>\n\t\t</p>\n\t\t<p>\n\t\t\t<label for=\"confirm_password\" class=\"floatLabel\">Confirm Password</label>\n\t\t\t<input id=\"confirm_password\" name=\"confirm_password\" type=\"password\"/>\n\t\t\t<span>Your passwords do not match</span>\n\t\t</p>\n\t\t<p>\n\t\t\t<input type=\"submit\" value=\"Create My Account\" id=\"submit\"/>\n\t\t</p>\n\t</form> */}","import React, { useState } from \"react\";\nimport './Auth.css';\nimport { Link, useHistory } from \"react-router-dom\"\n// import { useHistory } from \"react-router-dom\";\n\n\n\n\nfunction Signup({ handleLogin }) {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\tconst [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\tconst [agreed, setAgreed] = useState(false)\n\n  const history = useHistory()\n\n\n\tfunction handleSubmit(e) {\n\t\tconsole.log('whatever1')\n    // e.preventDefault();\n\t\tconsole.log('whatever2')\n\t\t// history.push(\"/Categories\");\n\n\n    fetch(\"/Signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n\t\t\t\tusername: username,\n\t\t\t\temail: email,\n\t\t\t\tpassword: password,\n\t\t\t\tpassword_confirmation: passwordConfirmation\n\t\t\t}),\n    })\n\t\t\t.then((r) => r.json())\n\t\t\t.catch((err) => {\n        console.log(\"behold the error\", err);\n      })\n      .then((data) => {\n\t\t\t\tif (data.errors) {\n          alert(\"Signup Failed\")\n          console.log(\"log the error again \", data.errors);\n        } else {\n\t\t\t\thandleLogin(data)\n\t\t\t\thistory.push('/Categories')\n        console.log(\"the data from the Signup fetch\", data)\n\t\t\t}\n\t\t\t});\n\t}\n\n  return (\n\n<>\n<div className=\"login-message\">Sign up to get started!</div>\n\n<div id=\"login\">\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<label className=\"image-replace username\" for=\"signup-username\">Username</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"signup-username\" type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n\t\t\t\t\t\t<span className=\"error-message\">Your username can only contain numeric and alphabetic symbols!</span>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<label className=\"image-replace email\" for=\"signup-email\">E-mail</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"signup-email\" type=\"email\" placeholder=\"E-mail\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n\t\t\t\t\t\t<span className=\"error-message\">Enter a valid email address!</span>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<label className=\"image-replace password\" for=\"signup-password\">Password</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"signup-password\" type=\"password\"  placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t\t\t\t<a href=\"#0\" className=\"hide-password\">Show</a>\n\t\t\t\t\t\t<span className=\"error-message\">Your password has to be at least 6 characters long!</span>\n\t\t\t\t\t</p>\n\n           <p className=\"fieldset\">\n          <label className=\"image-replace password\" for=\"signup-password\">Confirm Password</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"signup-password\" type=\"password\" placeholder=\"Confirm Password\" value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)}/>\n            <a href=\"#0\" className=\"hide-password\">Show</a>\n\t\t\t\t\t\t<span className=\"error-message\">Password does not match</span>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className=\"fieldset check\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"accept-terms\" onChange={()=> {\n\t\t\t\t\t\t\tsetAgreed(agreed => !agreed)\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t<label for=\"accept-terms\">I agree to the <a className=\"accept-terms\" href=\"#0\">Terms</a></label>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t</form>\n\n\n\t\t\t\t{/* <p className=\"fieldset\" onClick={handleLogSubmit}>\n\t\t\t\t\t\t<input className=\"full-width has-padding\" type=\"submit\" value=\"Login\"/>\n\t\t\t\t\t</p> */}\n\n          <p className=\"fieldset\" onClick={handleSubmit}>\n\t\t\t\t\t{/* <Link to=\"/Categories\" > */}\n\t\t\t\t\t\t<input className=\"full-width has-padding\" type=\"submit\" value=\"Create Account\" disabled={!agreed}/>\n\t\t\t\t\t\t{/* </Link> */}\n\t\t\t\t\t</p>\n\n\n\n          <Link to=\"/Registration\" ><button className=\"cd-close-form\">Registration</button></Link>\n\t\t\t</div>\n\t\t\t</>\n\n  )\n}\n\nexport default Signup;\n\n\n\n\n\n\n// <div>\n// <p class=\"tip\">Click on button in image container</p>\n// <div class=\"cont\">\n//   <div class=\"form sign-in\">\n//     <h2>Welcome back,</h2>\n//     <label>\n//       <span>Email</span>\n//       <input type=\"email\" />\n//     </label>\n//     <label>\n//       <span>Password</span>\n//       <input type=\"password\" />\n//     </label>\n//     <p class=\"forgot-pass\">Forgot password?</p>\n//     <button type=\"button\" class=\"submit\">Sign In</button>\n//     <button type=\"button\" class=\"fb-btn\">Connect with <span>facebook</span></button>\n//   </div>\n//   <div class=\"sub-cont\">\n//     <div class=\"img\">\n//       <div class=\"img__text m--up\">\n//         <h2>New here?</h2>\n//         <p>Sign up and discover great amount of new opportunities!</p>\n//       </div>\n//       <div class=\"img__text m--in\">\n//         <h2>One of us?</h2>\n//         <p>If you already has an account, just sign in. We've missed you!</p>\n//       </div>\n//       <div class=\"img__btn\">\n//         <span class=\"m--up\">Sign Up</span>\n//         <span class=\"m--in\">Sign In</span>\n//       </div>\n//     </div>\n//     <div class=\"form sign-up\">\n//       <h2>Time to feel like home,</h2>\n//       <label>\n//         <span>Name</span>\n//         <input type=\"text\" />\n//       </label>\n//       <label>\n//         <span>Email</span>\n//         <input type=\"email\" />\n//       </label>\n//       <label>\n//         <span>Password</span>\n//         <input type=\"password\" />\n//       </label>\n//       <button type=\"button\" class=\"submit\">Sign Up</button>\n//       <button type=\"button\" class=\"fb-btn\">Join with <span>facebook</span></button>\n//     </div>\n//   </div>\n// </div>\n\n// <a href=\"https://dribbble.com/shots/3306190-Login-Registration-form\" target=\"_blank\" class=\"icon-link\">\n//   <img src=\"http://icons.iconarchive.com/icons/uiconstock/socialmedia/256/Dribbble-icon.png\"/>\n// </a>\n// <a href=\"https://twitter.com/NikolayTalanov\" target=\"_blank\" class=\"icon-link icon-link--twitter\">\n//   <img src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/twitter-128.png\"/>\n// </a>\n// </div>","import React, { useState } from \"react\";\nimport './Auth.css';\nimport { Link, useHistory } from \"react-router-dom\"\n\n\n\nfunction Login({ handleLogin, user, setUser }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  console.log(\"here is use history \", useHistory)\n  // const [userData, setUserData] = useState(null);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n\n  const history = useHistory()\n\n  // history.push('/wherever')\n  // wont it route to the categories page anyways, since i have a /categories on the login link? also,\n  // what does allteh stuff after \"else\" do? all that state stuff\n\n  function handleLogSubmit() {\n    fetch(\"/Login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((r) => r.json())\n      .catch((err) => {\n        console.log(\"behold the error\", err);\n      })\n      .then((data) => {\n        if (data.error) {\n          alert(\"Login Failed; Incorrect Name/Password Combination. Or Maye You Haven't Signed Up?\")\n          console.log(\"log the error again \", data.error);\n        } else {\n          handleLogin(data)\n          // setUserData(data);\n          // setIsLoggedIn(true);\n          history.push('/Categories')\n          // console.log(\"logging the data\", data);\n          // setChange(Math.random());\n        }\n      })\n      // .then((user) => handleLogin(user));\n  }\n\n  // function handleLogSubmit(e) {\n  //   console.log(\"whatsup\")\n  //   e.preventDefault();\n  //   fetch(\"/Login\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ username, password }),\n  //   }).then((r) => {\n  //     if (r.ok) {\n  //       r.json().then((user) => handleLogin(user));\n  //     }\n  //   });\n  // }\n\n\n\n  return (\n    <>\n    <div className=\"login-message\">Log in to get started!</div>\n<div id=\"login\">\n\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<label className=\"image-replace username\" for=\"signin-email\">Username</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"signin-email\" type=\"email\" placeholder=\"Username\" value={username}\n        onChange={(e) => setUsername(e.target.value)}/>\n\t\t\t\t\t\t<span className=\"error-message\">An account with this username address does not exist!</span>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className=\"fieldset\">\n\t\t\t\t\t\t<label className=\"image-replace password\" for=\"signin-password\">Password</label>\n\t\t\t\t\t\t<input className=\"full-width has-padding has-border\" id=\"signin-password\" type=\"password\"  placeholder=\"Password\" value={password}\n        onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t\t\t\t<a href=\"#0\" className=\"hide-password\">Show</a>\n\t\t\t\t\t\t<span className=\"error-message\">Wrong password! Try again.</span>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className=\"fieldset check\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"remember-me\" />\n\t\t\t\t\t\t<label for=\"remember-me\">Remember me</label>\n\t\t\t\t\t</p>\n\n          </form>\n\n\n          <p className=\"fieldset\" onClick={handleLogSubmit}>\n\t\t\t\t\t{/* <Link to=\"/Categories\" > */}\n\t\t\t\t\t\t<input className=\"full-width has-padding\" type=\"submit\" value=\"Login\"/>\n\t\t\t\t\t\t{/* </Link> */}\n\t\t\t\t\t</p>\n\n\n          {/* <Link to=\"/Registration\" ><button><a href=\"#0\" className=\"cd-close-form\">Registration</a></button></Link> */}\n          {/* <br></br>\n          <br></br>\n          <br></br> */}\n\n          <Link className=\"regy\" to=\"/Registration\" ><button className=\"cd-close-form\">Registration</button></Link>\n\n          {/* <a href=\"#0\" className=\"cd-close-form\">Registration</a> */}\n\n\t\t\t</div>\n      </>\n  )\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport './App.css';\nimport {Link} from \"react-router-dom\"\n\n\n\n\nfunction CategoryCard( {specificCategory, listOfCategories, handleCatAndDiff}) {\n\n\n  // function handleCatAndDiff(e) {\n  //   for(var i = 0; i < listOfCategories.length; i++) {\n  //     if (listOfCategories[i] === specificCategory) {\n  //             console.log(\"abajaba\", i + 9)\n  //             let category = i + 9\n  //           }\n  //   }\n  //   let difficulty = e.target.value\n  // }\n\n\n  return(\n    <li className=\"card\">\n    <div className=\"image\">\n      {/* <span className=\"price\">${price}</span> */}\n      {/* <img src={image} alt={name} /> */}\n    </div>\n    <div className=\"details\">\n      {/* {favorite ? (\n        <button\n          onClick={() => setFavorite(false)}\n          className=\"emoji-button favorite active\"\n        >\n          ★\n        </button>\n      ) : (\n        <button\n          onClick={() => setFavorite(true)}\n          className=\"emoji-button favorite\"\n        >\n          ☆\n       </button>\n      )} */}\n      <strong>{specificCategory}</strong>\n      <br></br>\n      <br></br>\n\n      {/* <Link to=\"/Question\"><button className=\"easy-button\" value=\"easy\" onClick={() => handleCatAndDiff(\"easy\", specificCategory)}>easy</button></Link> */}\n      {/* <Link to=\"/Question\"><button value=\"medium\" onClick={() => handleCatAndDiff(\"medium\", specificCategory)}>medium</button></Link>\n      <Link to=\"/Question\"><button value=\"hard\" onClick={() => handleCatAndDiff(\"hard\", specificCategory)}>hard</button></Link> */}\n\n\n      {/* <Link to=\"/Question\"><div class=\"sub-main\"><button value=\"hard\" class=\"button-two\"\n      onClick={() => handleCatAndDiff(\"hard\", specificCategory)}>hard</button></div></Link> */}\n      <Link to=\"/Question\"><button className=\"difficulty-level-button\" value=\"easy\" onClick={() => handleCatAndDiff(\"easy\", specificCategory)}><span>easy</span></button></Link>\n      <Link to=\"/Question\"><button className=\"difficulty-level-button\" value=\"medium\" onClick={() => handleCatAndDiff(\"medium\", specificCategory)}><span>medium</span></button></Link>\n      <Link to=\"/Question\"><button className=\"difficulty-level-button\" value=\"hard\" onClick={() => handleCatAndDiff(\"hard\", specificCategory)}><span>hard</span></button></Link>\n\n\n\n\n      {/* <button onClick={handleDeleteClick} className=\"emoji-button delete\">\n        🗑\n      </button>\n      <button onClick={() => handleAddItem(id)}>Buy</button>; */}\n\n    </div>\n    </li>\n\n  )\n}\n\nexport default CategoryCard;","import React, { useEffect } from \"react\";\nimport CategoryCard from \"./CategoryCard\"\nimport './App.css';\n\n\nfunction Categories({ user, setUser, handleCatAndDiff, listOfCategories }) {\n  // console.log(\"heres the user in categories function \", user)\n\n  // useEffect(() => {\n  //   fetch(\"/me\").then((response) => {\n  //     if (response.ok) {\n  //       response.json().then((user) => setUser(user));\n  //     }\n  //     else{\n  //       console.log(response)\n  //     }\n  //   });\n  // }, [])\n\n  return (\n<main className=\"page\">\n {user &&  <div className=\"hi-choose\"><h1 className=\"hi-user\">Hi {user.username}!</h1> <h3>Choose a Category and Level</h3></div>}\n<ul className=\"cards\">\n\n    {user && listOfCategories.map((specificCategory) => (\n<CategoryCard specificCategory={specificCategory} listOfCategories={listOfCategories} handleCatAndDiff={handleCatAndDiff}/>\n))\n}\n</ul>\n</main>\n )\n}\n\nexport default Categories","import {Link} from \"react-router-dom\"\nimport React from \"react\";\nimport './App.css';\n\n// import { Contain } from \"./Styles/Contain.styled\"\n\n\nfunction Navbar({ user, setUser}) {\n  console.log(\"the userrrr \", user)\n\n\n  function handleLogoutClick() {\n    console.log(\"logged out\", user)\n    fetch(\"/Logout\", {\n        method: \"DELETE\"\n    })\n        .then(r=>r.json())\n        .then(setUser(null));\n}\n\n\nconsole.log(\"thats that user tho \", user)\n\n\n  return(\n  <nav className = \"navBar\">\n    {/* <div className=\"triviapp\">TriviApp</div> */}\n    <div id=\"logout\">\n            {user && <button className=\"difficulty-level-button logout-button\" onClick={handleLogoutClick}>\n            <Link className=\"hello\" to=\"/Registration\" >Logout</Link>\n            </button>}\n            </div>\n            <div className=\"triviapp\">TriviApp</div>\n\n            {/* {user ? (<h1>Hi {user.username}!</h1>) : ('')} */}\n  </nav>\n  )\n}\n\nexport default Navbar;","import React, { useEffect, useState } from \"react\";\nimport './Question.css';\nimport './Leaderboard.css';\nimport './Barchart.css';\nimport {Link} from \"react-router-dom\"\n\n// import styled from \"styled-components\"\n\n\n\nfunction Question({ category, difficulty, user}) {\n  // const [question, setQuestion] = useState(null);\n  // const [answer, setAnswer] = useState(null);\n  // const [incorrectAnswers, setIncorrectAnswers] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [answersArray, setAnswersArray] = useState([]);\n  const [answersState, setAnswersState] = useState(null);\n  const [finalFourAnswerArray, setFinalFourAnswerArray] = useState([]);\n  const [correctArrayState, setCorrectArrayState] = useState(null);\n  const [answerIndex, setAnswerIndex] = useState(null);\n  const [questionsArray, setQuestionsArray] = useState([]);\n  const [attempt, setAttempt] = useState(null);\n  const [highScore, setHighScore] = useState(null);\n  const [averageScore, setAverageScore] = useState(null);\n  const [personalHighScore, setPersonalHighScore] = useState(null);\n  const [personalAverage, setPersonalAverage] = useState(null);\n  const [newLeaderEntryPost, setNewLeaderEntryPost] = useState(null);\n  const [newLeaderEntryPatch, setNewLeaderEntryPatch] = useState(null);\n  const [allLeaderEntries, setAllLeaderEntries] = useState(null);\n  const [resultsArray, setResultsArray] = useState([]);\n  const [allData, setAllData] = useState(null);\n\n\n\n\n\n  console.log('first log')\n\n  useEffect(() => {\n    fetch(`https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`)\n      .then((r) => r.json())\n      .then(data => hello(data))\n      .catch(error => console.log(\"error is: \", error));\n  }, []);\n\n  console.log('second log')\n\n\n\n// this function creates an array of objects, with each object having two properties, the correct answers and incorrect answers\n  function hello(api) {\n    if(api.results.length === 0) {\n      // alert(\"Unfortunately There Is No Quiz For This Level, Try Another Level!\");\n      setAllData(api)\n      return;\n    }\n\n    console.log(\"this is the api \", api)\n    // const onlyQuestions = api.results.map((obj) => ({question: obj.question}))\n    const onlyQuestions = api.results.map(obj => obj.question)\n    console.log(\"henceforth shall be the questions \", onlyQuestions)\n    setQuestionsArray(onlyQuestions)\n    const onlyAnswers = api.results.map((obj) => ({correctAnswer: obj.correct_answer, incorrectAnswers: obj.incorrect_answers}))\n    console.log(\"henceforth shall be the answers \", onlyAnswers)\n    setAnswersArray(onlyAnswers)\n    let correctArray = onlyAnswers.map(answersObj => answersObj.correctAnswer)\n    console.log(\"this is the correct array \", correctArray)\n    setCorrectArrayState(correctArray)\n    // setCorrectArrayState creates an array of all ten correct answers\n    next(onlyAnswers)\n  }\n\n  console.log('third log')\n\n\n\nfunction next(answersArray) {\n  // for(var i = 0; i < answersArray.length; i++) {\n  //   console.log(\"one correct and one incorrect answer\", answersArray[i])\n  //   console.log(i)\n  //   setAnswersState(answersArray[i])\n  //   // answersState is the specific answers object that is being iterated over\n  //   break;\n  // }\n  let newAnswerIndex = 0\n  if(answerIndex === null) {\n    newAnswerIndex = 0\n// setAnswerIndex(0)\n  } else if(answerIndex !== null && answerIndex < 9){\n     newAnswerIndex = answerIndex + 1\n  }\n  console.log(\"the answer array \", answersArray)\n  setAnswersState(answersArray[newAnswerIndex])\n  setAnswerIndex(newAnswerIndex)\n\n}\n\n// next func takes answers array and sets the first index to state\nuseEffect(() => {\n  console.log(\"answer state \", answersState)\n  if(answerIndex !== null) {\n    ansArrFunc()\n  }\n}, [answerIndex])\n\nfunction ansArrFunc() {\n  console.log(\"what happnes here\")\n  var fourAnswerArray = []\n  for(var key in answersState){\n    fourAnswerArray.push(answersState[key]);\n  // fourAnswerArray = [...fourAnswerArray, answersState.incorrectAnswers]\n  }\n  console.log(\"here are 4 answers \", fourAnswerArray)\n\n  let finalFourAnswerArray = [...fourAnswerArray[1], fourAnswerArray[0]]\n  // console.log(\"here are 4 answers \", finalFourAnswerArray)\n      for (var i = finalFourAnswerArray.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = finalFourAnswerArray[i];\n        finalFourAnswerArray[i] = finalFourAnswerArray[j];\n        finalFourAnswerArray[j] = temp;\n    }\nconsole.log(\"the array of four shuffled answers to be mapped \", finalFourAnswerArray)\n  console.log(\"whats good\")\n  setFinalFourAnswerArray(finalFourAnswerArray)\n}\n\nfunction decodeHtml(html) {\n  var txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}\n\n  function handleAnswerOptionClick(e) {\n    let filteredArray = correctArrayState.filter(correctAns => e.target.value === correctAns)\n    console.log(\"hence correct array state \", correctArrayState)\n    console.log(\"target value \", e.target.value)\n    console.log(\"this is the filtered array \", filteredArray)\n\n\n    if (filteredArray.length !== 0) {\n      setScore(score + 1)\n      // setResultsArray(resultsArray.push({question: questionsArray[currentQuestion]}))\n      setResultsArray([...resultsArray, {question: decodeHtml(questionsArray[currentQuestion]), answer: decodeHtml(answersState.correctAnswer)}])\n    } else {\n      setResultsArray([...resultsArray, {question: decodeHtml(questionsArray[currentQuestion]), yourWrongAnswer: e.target.value, answer: decodeHtml(answersState.correctAnswer)}])\n    }\n    console.log(\"initial result array \", resultsArray)\n\n\t\t// if (isCorrect) {\n\t\t// \tsetScore(score + 1);\n\t\t// }\n\n\t\tsetCurrentQuestion(currentQuestion + 1);\n\t\tif (currentQuestion < 9) {\n      next(answersArray)\n\t\t\t// setCurrentQuestion(nextQuestion);\n\t\t} else {\n      setShowScore(true);\n\n\t\t}\n  };\n\n  // fndjaisnfi  fndasnfldangdaw\n\n  // function yoho() {\n  //   fetch(\"/leaderboard_entries\").then((response) => {\n  //     // console.log(\"yippee mid fetch\")\n  //     if (response.ok) {\n  //       response.json().then((entryData) => console.log(\"so many leaderboard logs \",entryData));\n  //     }\n  //   });\n  // }\n\n  // const playArray = [{name: \"alex\", score: 23}, {name: \"mike\", score: 14}, {name: \"joe\", score: 9}, {name: \"ali\", score: 54}, {name: \"brian\", score: 43}]\n  // const newPlayArray = playArray.sort((a, b) => a.score - b.score).reverse()\n  // console.log(\"the new play array \", newPlayArray)\n\n  // useEffect(() => {\n  //   let theLeaderboard = [...leaderboard].sort((a, b) => a[1] - b[1]).reverse().map((u) => `${u[0]} --- ${u[1]}\\n\\n`).slice(0, 15)\n  // }, [filler])\n\n  // useEffect(() => {\n  //   let theLeaderboard = [...leaderboard].sort((a, b) => a[1] - b[1]).reverse().map((u) => `${u[0]} --- ${u[1]}\\n\\n`).slice(0, 15)\n  // }, [filler])\n\n  useEffect(() => {\n    console.log(\"check out these entries \", allLeaderEntries)\n  }, [allLeaderEntries])\n\n  useEffect(() => {\n    fetch(\"/leaderboard_entries\").then((response) => {\n      // console.log(\"yippee mid get fetch from post\")\n      if (response.ok) {\n        response.json().then((r) => setAllLeaderEntries(r));\n      }\n    });\n  }, [newLeaderEntryPost])\n\n  useEffect(() => {\n    fetch(\"/leaderboard_entries\").then((response) => {\n      // console.log(\"yippee mid get fetch from patch\")\n      if (response.ok) {\n        response.json().then((r) => setAllLeaderEntries(r));\n      }\n    });\n  }, [newLeaderEntryPatch])\n\n  function handleCombinedScore(leaderData) {\n    console.log(\"the data of the leader\", leaderData)\n\n    let filtered = leaderData.filter(leaderEntry => user.username === leaderEntry.user.username)\n    console.log(\"filter it up \", filtered)\n    if (filtered.length === 0) {\n      fetch(\"/leaderboard_entries\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          high_score: null,\n          cumulative_score: score,\n          user_id: user.id\n        }),\n      })\n        .then((r) => r.json())\n        .then((data) => {\n          setNewLeaderEntryPatch(data)\n        });\n    } else {\n      let oldCombinedScore = filtered[0].cumulative_score\n      fetch(`leaderboard_entries/${filtered[0].id}`, {\n  method: \"PATCH\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    cumulative_score: oldCombinedScore + score\n  }),\n})\n  .then((r) => r.json())\n  .then((updatedEntry) => setNewLeaderEntryPost(updatedEntry));\n    }\n    // now we do a get fetch request to the leaderboard table, and apply elijah's sort and map code\n\n    // so the problem here is that the below fetch does not show the updated cumulative score,\n    // even though i just did the patch request above. its always one behind. fix this.\n    // yoho()\n    // or instead of yoho use a useEffect with updatedEntry in the dependency array, and put the get request to leaderboard entries inside it\n\n    // also, why does tani's (id: 1) cumulutaive score keep going up for no reason? every time te page rerenders,\n    // the latest person to go's score updates. it runs again- maybet heuseeffect is the cultprit here\n\n    //  so whats goin on here is it rerenders twice. it updates teh persons cumulative points and adds double the amount\n    // they got right this round. so if they previously had a cumulative score of 12, and they got 3 right, every time the page\n    // rerenders it adds six. so itll go from 12 to 18 to 24 to 30, etc   nkj k dfasf\n    // when i log a diff user in, it adds teh proper amount to the cumulative score of teh last person who did the quiz.\n    // then i renrender and it does the double add thing to the current logged person\n\n  // so to recap, firstoff the leaderboard entry gets updated late. secondly it does the patch request twice every time the page rerenders.\n  }\n\n  function handleAverage(allAttempts) {\n    let highest = allAttempts[0].score\n    let total = 0\n    let personalBest = 0\n    let personalTotal = 0\n    let count = 0\n    // if allattempts.user.username === user, check to see if score is higher than personalBest and set new personalBest if so\n    for(var i = 0; i < allAttempts.length; i++) {\n\n      if(allAttempts[i].score > highest) {\n        highest = allAttempts[i].score\n      }\n\n      total = total + allAttempts[i].score\n\n      // console.log(\"this specific attempt \", allAttempts[i])\n      // console.log(\"lets see this user \", user)\n\n      if(allAttempts[i].user.username === user.username && allAttempts[i].score > personalBest) {\n        personalBest = allAttempts[i].score\n      }\n\n      if(allAttempts[i].user.username === user.username) {\n        personalTotal = personalTotal + allAttempts[i].score\n        count++\n      }\n\n    }\n\n    // do get request to leaderboard table, take the data and do a filter function and return true if user === data.user.username.\n    // if that filtered array is empty, meaning it's the user's first time doing the quiz, do a post request that adds\n    // attempt.score as the cumulative score. if the array is not empty, meaning it's not the user's first attempt,\n    // do a fetch update that does data.cumulative_score plus attempt.score. that should be in the update fetch request as follows:\n    // cumulative_score: data.cumulative_score plus attempt.score\n\n    // now that i have the cumulative scores of each user in the LeaderboardEntry table, use elijah's code to sort it and map it\n\n// console.log(\"yippee before fetch\")\n    fetch(\"/leaderboard_entries\").then((response) => {\n      // console.log(\"yippee mid fetch\")\n      if (response.ok) {\n        response.json().then((leaderData) => handleCombinedScore(leaderData));\n      }\n    });\n\n    // console.log(\"yippee after fetch\")\n\n\n    // setTotalScore(total)\n    let average = total / allAttempts.length\n    let selfAverage = personalTotal / count\n    setPersonalAverage(selfAverage)\n    setAverageScore(average)\n    setHighScore(highest)\n    setPersonalHighScore(personalBest)\n  }\n\n  // function handleCumulative() {\n  //   //\n  // }\n\n  // useEffect(() => {\n  //   if (showScore) {\n  //     fetch(\"/yo\").then((response) => {\n  //       if (response.ok) {\n  //         response.json().then((data) => handleCumulative(data));\n  //       }\n  //     });\n  //   }\n  // }, [showScore])\n\n  useEffect(() => {\n    if (showScore) {\n      console.log(\"bout to show leaderboard\", showScore)\n      fetch(\"/Attempt\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          score: score,\n          user_id: user.id\n        }),\n      })\n        .then((r) => r.json())\n        .then((data) => {\n          setAttempt(data)\n          console.log(\"the attempt frmo the attempt fetch \", data)\n        });\n\n        // i need the above poist request to happen, and then the below get request to happen. Currently, the get request is happening\n        // and indexing all the data without the latest attempt having been added to the attempts table. this is no bueno,\n        // bc it does not show the attempt that the user just did. I need this for what im rendering.\n\n        // fetch(\"/Average\").then((response) => {\n        //   if (response.ok) {\n        //     response.json().then((allAttempts) => handleAverage(allAttempts));\n        //   }\n        // });\n\n    } else {\n      console.log(\"NOTHING TO SEE HERE\")\n    }\n    },\n     [showScore])\n\n     useEffect(() => {\n       if(attempt !== null) {\n      fetch(\"/Average\").then((response) => {\n        if (response.ok) {\n          response.json().then((allAttempts) => handleAverage(allAttempts));\n        }\n      });\n    }\n     }, [attempt])\n\n\n    //  fetch(\"/Average\").then((response) => {\n    //   if (response.ok) {\n    //     response.json().then((r) => console.log(\"average data is: \", r));\n    //   }\n    // });\n  // every time showsocre changes (becomes true) we want to to a fetch post request and capture and post the score, and the user id.\n\n  // console.log(\"here is the unescape \", decodeHtml(questionsArray[answerIndex]))\n\n//  when showscore becomes true, i want to do a get request fetch to the attempts table, and retrieve all the attempts,\n// then once i have that data, call a fucntion on that data that loops over the data (maybe using reduce function)\n// and adds all the scores together, then divide that number by the number of attempts (by the data.length) (perhaps if i can divide it by the id of\n// the last attempt). this will give me the average score for all users. set this in state, call it setAverage. Ah! do this functionality in the atttempts controller. make a\n// custom method.\n\n// function sortByHighScore(){\n//   console.log(\"whazzaaaaap\")\n// }\n\nfunction sortByHighestAverage(){\n  console.log(\"yooyoyoyo\")\n}\n\nfunction sortByHighestCumulative(){\n  console.log(\"whatsgoodwiddit\")\n}\n\n// const dynamicHeight = (4 + 95) + \"%\"\n\nconst highscory = (highScore * 10) + \"%\"\nconst personalHighScory = (personalHighScore * 10) + \"%\"\nconst averageScory = (averageScore * 10) + \"%\"\nconst personalAveragy = (personalAverage * 10) + \"%\"\nconst scory = (score * 10) + \"%\"\n\n\nconsole.log(\"high scory is \", highscory)\nconsole.log(\"personal high scory is \", personalHighScory)\nconsole.log(\"average scory is \", averageScory)\nconsole.log(\"personal averagy is \", personalAveragy)\n\n\nconsole.log(\"scooooorer \", score)\n\n\n  return (\n\t\t<div className=\"question-container\">\n\t\t\t{showScore && attempt &&\n <div>\n <div className='score-section'>\n   You scored {score} out of 10!\n </div>\n <br></br>\n {/* <strong>Attempt number: {attempt.id}</strong><br></br>\n <strong>The average score from all players for this game is: {averageScore}</strong><br></br>\n <strong>The high score from all players for this game is: {highScore}</strong><br></br>\n <strong>Your personal high score is: {personalHighScore}</strong><br></br>\n <strong>Your personal average is: {personalAverage}</strong> */}\n\n <div className=\"answer-results\">\n {resultsArray.map(r => r.yourWrongAnswer === undefined ? <div className=\"correct\"><br></br>\n {resultsArray.indexOf(r) + 1}. {r.question} <br></br><br></br> CORRECT, it's  \"{r.answer}\"<br></br></div> : <div className=\"incorrect\"><br></br>\n {resultsArray.indexOf(r) + 1}. {r.question} <br></br><br></br> You Chose \"{r.yourWrongAnswer}\".\n But you're WRONG, Stupid! The correct answer is \"{r.answer}\"<br></br></div>)}\n </div>\n\n <br></br>\n <br></br>\n <br></br>\n <br></br>\n <br></br>\n <br></br>\n\n <div className=\"entire-board\">\n <h2 className=\"title\">Player Leaderboard</h2>\n\n {/* <div>\n   {resultsArray.map(r => r.yourWrongAnswer === undefined ? <p>{r.question + \" \" + r.answer}</p> : <p>{r.question + \" \" + r.yourWrongAnswer + \" WRONG, IT'S \" + r.answer}</p>)}\n </div> */}\n\n\n\n <table className=\"taby\">\n\n <thead>\n <tr className=\"toprow\">\n   <th class=\"rank\">Rank</th>\n   <th className=\"play\">Player</th>\n   {/* <th onClick={sortByHighScore}>High Score</th> */}\n   {/* <th onClick={sortByHighestAverage}>Average Score(rn shows high score)</th> */}\n   <th className=\"play\"></th>\n   <th onClick={sortByHighestCumulative} class=\"combined\">Combined Score</th>\n   </tr>\n</thead>\n\n{allLeaderEntries.sort((a, b) => a.cumulative_score - b.cumulative_score).reverse().map(entry => <tr>\n <td class=\"rank\">{allLeaderEntries.indexOf(entry) + 1}</td>\n <td className=\"player-and-arrow\">{entry.user.username}</td>\n <td className=\"player-and-arrow\">-----------------------------------------------------------------></td>\n\n {/* <td>{entry.high_score}</td> */}\n <td class=\"combined\">{entry.cumulative_score}</td>\n </tr>).slice(0, 15)}\n\n{/* <tr>\n<td>1</td>\n<td>Alfreds Futterkiste</td>\n<td>Maria Anders</td>\n<td>Germany</td>\n</tr>\n\n<tr>\n<td>2</td>\n<td>Francisco Chang</td>\n<td>Mexico</td>\n<td>Mexico</td>\n</tr>\n\n<tr><td>3</td></tr>\n<tr><td>4</td></tr>\n<tr><td>5</td></tr>\n<tr><td>6</td></tr>\n<tr><td>7</td></tr>\n<tr><td>8</td></tr>\n<tr><td>9</td></tr>\n<tr><td>10</td></tr> */}\n\n</table>\n\n</div>\n\n<br></br>\n <br></br>\n <br></br>\n <br></br>\n\n\n <h1>Compare your score with the TriviApp Graph!</h1>\n <div class=\"buttony\">\n<div className=\"scores uno\">Your Score</div>\n<div className=\"scores dos\">Your High Score</div>\n<div className=\"scores tres\">Average TriviApp score</div>\n<div className=\"scores quatro\">Your Average Score</div>\n\n</div>\n<div class=\"chart-container\">\n\n\n<div class=\"base\"></div>\n\n<ul class=\"meter\">\n<li><div>8</div></li>\n<li><div>6</div></li>\n<li><div>4</div></li>\n<li><div>2</div></li>\n<li><div>0</div></li>\n\n</ul>\n\n<table>\n<tr>\n {/* <button>heee</button> */}\n <td></td>\n <td></td>\n <td></td>\n <td></td>\n {/* <td></td>\n <td></td>\n <td></td>\n <td>hey</td> */}\n</tr>\n<tr>\n <td></td>\n <td></td>\n <td></td>\n <td></td>\n {/* <td></td>\n <td></td>\n <td></td>\n <td></td> */}\n</tr>\n<tr>\n <td></td>\n <td></td>\n <td></td>\n <td></td>\n {/* <td></td>\n <td></td>\n <td></td>\n <td></td> */}\n</tr>\n<tr>\n <td></td>\n <td></td>\n <td></td>\n <td></td>\n {/* <td></td>\n <td></td>\n <td></td>\n <td></td> */}\n</tr>\n<tr>\n <td></td>\n <td></td>\n <td></td>\n <td></td>\n {/* <td></td>\n <td></td>\n <td></td>\n <td></td> */}\n</tr>\n</table>\n\n<div class=\"barnard\">\n<div class=\"bar one\" style={{height: scory}}></div>\n<div class=\"bar two\" style={{height: personalHighScory}}></div>\n<div class=\"bar three\" style={{height: averageScory}}></div>\n<div class=\"bar four\" style={{height: personalAveragy}}></div>\n</div>\n\n{/* <div class=\"bar five\"></div>\n<div class=\"bar six\"></div>\n<div class=\"bar seven\">jijiji</div>\n<div class=\"bar eight\"></div> */}\n</div>\n\n<br></br>\n<br></br>\n\n<div className=\"play-again\">\n<Link to=\"/Categories\">Play Again!</Link>\n</div>\n\n </div>\n      }\n      {showScore === false && allData === null &&\n\t\t\t\t<div className=\"question-and-answer\">\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{10}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{decodeHtml(questionsArray[answerIndex])}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{finalFourAnswerArray.map((answerOption) => (\n\t\t\t\t\t\t\t// <button value={answerOption} onClick={(e) => handleAnswerOptionClick(e)}>{decodeHtml(answerOption)}</button>\n              <button className=\"options-button\" value={answerOption} onClick={(e) => handleAnswerOptionClick(e)}>{decodeHtml(answerOption)}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      }\n      {allData !== null &&\n      <div>\n        <h1 className=\"whoopsie\">Whoops!</h1>\n        <h4 className=\"whoops-message\">The {category === 13 ? \"Musicals and Theater\" : category === 19 ? \"Mathematics\" : category === 24 ? \"Politics\" : category === 25 ? \"Art\" : category === 26 ? \"Celebrities\" : category === 30 ? \"Gadgets\" : \" whatever\"} quiz is currently under construction. Please go back and try another quiz.</h4>\n        <Link to=\"/Categories\" className=\"whoops-back-link\">Back</Link>\n          {/* <div>{category === 13 ? <a className=\"trivia-link\" href=\"https://www.usefultrivia.com/music_trivia/broadway_musicals_trivia.html\">Musicals Trivia!</a>\n          : category === 19 ? <a className=\"trivia-link\" href=\"https://www.triviaquestionss.com/math-trivia-questions-and-answers/\">Math Trivia!</a> : category === 24 ? <a className=\"trivia-link\" href=\"https://www.usefultrivia.com/political_trivia/\">Politics Trivia!</a>\n          : category === 25 ? <a className=\"trivia-link\" href=\"https://www.usefultrivia.com/art_trivia/\">Art Trivia!</a> : category === 26 ? <a className=\"trivia-link\" href=\"https://www.usefultrivia.com/celebrity_trivia/\">Celebrity Trivia!</a>\n          : category === 30 ? <a className=\"trivia-link\" href=\"https://www.britannica.com/quiz/electronics-amp-gadgets-quiz\">Electronics and Gadgets Trivia!</a> : \"Nothing to see here\"}</div> */}\n        </div>\n      }\n\n        {/* {allData.results.length !== 0 &&\n          <h1>what is up with this crap</h1>\n        } */}\n\n\n\n\n\t\t</div>\n\t)\n}\n\nexport default Question\n\n// problem 1: someimtes the useEffect renders the proper api, and sometimes the Pi is empty. why is this?\n// problem 2: the question has random characters in it, how do i remove them?\n\n// I want to fetch in here, keep the array of data in state, and every time i click the next question button,\n// state will change to the object at the next index\n// i also need the difficulty level state and category state to be here for the fetch call\n\n\n// the following code is everything i need to create an shuffled array of the four answers that i will map over,\n// so i will map over fourAnswerArray\n\n// const answers = data.results.map((obj) => ({correctAnswer: obj.correct_answer, incorrectAnswers: obj.incorrect_answers}))\n\n\n// function ansArrFunc() {\n//   var fourAnswerArray = []\n//   for(var key in answersState){\n//     fourAnswerArray.push(answersState.correctAnswer);\n//   fourAnswerArray = [...fourAnswerArray, answersState.incorrectAnswers]\n//   }\n//       for (var i = fourAnswerArray.length - 1; i > 0; i--) {\n//         var j = Math.floor(Math.random() * (i + 1));\n//         var temp = fourAnswerArray[i];\n//         fourAnswerArray[i] = fourAnswerArray[j];\n//         fourAnswerArray[j] = temp;\n//     }\n// console.log(fourAnswerArray)\n//   console.log(\"whats good\")\n\n// }\n\n// function next() {\n//   for(var i = 0; i < answers.length; i++) {\n//     console.log(answers[i])\n//     console.log(i)\n//     setAnswersState(answers[i])\n//     ansArrFunc()\n//     // answersState is the specific answers object that is being iterated over\n//     break;\n//   }\n// }\n\n// next()\n\n\n\n\n\n\n\n\n// old format:\n\n\n// import React, { useEffect, useState } from \"react\";\n// import './Question.css';\n\n// function Question({ category, difficulty}) {\n\n//   const [question, setQuestion] = useState(null);\n//   const [answer, setAnswer] = useState(null);\n//   const [incorrectAnswers, setIncorrectAnswers] = useState(null);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n// \tconst [showScore, setShowScore] = useState(false);\n//   const [score, setScore] = useState(0);\n\n//   // var answersArray = [answer1, answer2, answer3, answer4, answer5, answer6, answer7, answer8, ]\n//   let answersArray = []\n\n//   function handleQuestionApi(data) {\n//     setQuestion(data.results[0].question)\n//     setAnswer(data.results[0].correct_answer)\n//     setIncorrectAnswers(data.results[0].incorrect_answers)\n//     // for loop over data.results, then for in loop over the object within the for loop,\n//     // check to see if obj[key] === correct_answer || obj[key] === incorrect_answers, and if so, add it to the all questions array\n//     // that will be kept in state. Then I create another for loop after this one, not inside of it, looping over\n//     // the answersArray, and i use slice to cut out a chunk of four elements. i will keep those 4 elements in state\n//     // called currentAnswers and map them out, once i shuffle them\n//     // using a shuffle method (google it).\n//     // every time i click next quetion button the next four answers will be set to state and mapped out.\n//     const answers = data.results.map((obj) => ({correctAnswer: obj.correct_answer, incorrectAnswers: obj.incorrect_answers}))\n//   }\n\n\n//   // every time i click next question, i want to set state to a shuffled array of the next object. how do i acheive this?\n\n//   function setAnswersState() {\n//     // map over answers array, and on each iteration, push the values of the object into an array\n//   }\n\n//   // for(var i = 0; i < data.results; i++) {\n//   //   for(var key in obj) {\n//   //     if(key === correct_answer || key === incorrect_answers) {\n//   //       answersArray.push(obj[key])\n//   //     }\n//   //   }\n//   // }\n\n//   useEffect(() => {\n//     fetch(`https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`)\n//       .then((r) => r.json())\n//       .then(data => handleQuestionApi(data));\n//   }, []);\n\n\n//   const handleAnswerOptionClick = (isCorrect) => {\n// \t\tif (isCorrect) {\n// \t\t\tsetScore(score + 1);\n// \t\t}\n\n// \t\tconst nextQuestion = currentQuestion + 1;\n// \t\tif (nextQuestion < 10) {\n// \t\t\tsetCurrentQuestion(nextQuestion);\n// \t\t} else {\n// \t\t\tsetShowScore(true);\n// \t\t}\n// \t};\n\n//   return (\n// \t\t<div className=\"question-container\">\n// \t\t\t{showScore ? (\n// \t\t\t\t<div className='score-section'>\n// \t\t\t\t\tYou scored {score} out of 10\n// \t\t\t\t</div>\n// \t\t\t) : (\n// \t\t\t\t<>\n// \t\t\t\t\t<div className='question-section'>\n// \t\t\t\t\t\t<div className='question-count'>\n// \t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{10}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className='question-text'>{question}</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='answer-section'>\n// \t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n// \t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</div>\n// \t\t\t\t</>\n// \t\t\t)}\n// \t\t</div>\n// \t);\n// }\n\n// export default Question","// import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\";\n\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\"\nimport Registration from \"./Registration\"\nimport Signup from \"./Signup\"\nimport Login from \"./Login\"\nimport Categories from \"./Categories\"\nimport Navbar from \"./Navbar\"\nimport Question from \"./Question\"\n// import Stats from \"./Stats\"\n\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [category, setCategory] = useState(null);\n  const [difficulty, setDifficulty] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\").then((response) => {\n      if (response.ok) {\n        response.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  const listOfCategories = [\"General Knowledge\", \"Books\", \"Film\", \"Music\", \"Musicals & Theater\", \"Television\", \"Video Games\",\n  \"Board Games\", \"Science & Nature\", \"Computers\", \"Mathematics\", \"Mythology\", \"Sports\", \"Geography\", \"History\", \"Politics\",\n  \"Art\", \"Celebrities\", \"Animals\", \"Vehicles\", \"Comics\", \"Gadgets\", \"Japanese Anime & Manga\", \"Cartoon & Animations\"]\n\n  function handleCatAndDiff(difficulty, specificCategory) {\n    // e.preventDefault()\n    for(var i = 0; i < listOfCategories.length; i++){\n      if (listOfCategories[i] === specificCategory) {\n        console.log(\"category number is \", i + 9)\n        // if its a category taht comes after gadgets, do i + 10 (bc im removing gadgets bc theres no api)\n        setCategory(i + 9)\n      }\n      // setCategory(listOfCategories[i + 8])\n    }\n    // console.log(\"speccie\", specificCategory)\n    // setCategory(\"aloha\")\n    setDifficulty(difficulty)\n    // console.log(\"the value \", e.target.value)\n    console.log(\"the category is: \", category)\n    console.log(\"the difficulty is: \", difficulty)\n    console.log(listOfCategories)\n  }\n\n\n\n  function handleLogin(user) {\n    console.log(\"working\")\n    setUser(user);\n    console.log(\"this is the user in handleLogin\", user)\n  }\n\n\n  return (\n<div className=\"app\">\n    <Navbar user={user} setUser={setUser}/>\n\n    <Switch>\n\n        <Route path=\"/Registration\">\n              <Registration />\n        </Route>\n\n        <Route path=\"/Signup\">\n              <Signup handleLogin={handleLogin}/>\n        </Route>\n\n        <Route path=\"/Login\">\n              <Login handleLogin={handleLogin} user={user} setUser={setUser}/>\n        </Route>\n\n        <Route path=\"/Categories\">\n            <Categories user={user} setUser={setUser} handleCatAndDiff={handleCatAndDiff} listOfCategories={listOfCategories}/>\n        </Route>\n\n        <Route path=\"/Question\">\n              <Question category={category} difficulty={difficulty} user={user}/>\n        </Route>\n\n        {/* <Route path=\"/Stats\">\n              <Stats category={category} difficulty={difficulty} user={user}/>\n        </Route> */}\n\n    </Switch>\n    </div>\n\n  );\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App Route={Route}/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}